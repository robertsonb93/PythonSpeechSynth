import sys
import vtlPythonAPI as vtl
import tensorflow as tf
import TextScraper as sc
import TrainingDataGen as tdg

spkr ="test1.speaker"
maxLen = 0.005 #if they all come out at max length 20cm
minLen = 0.0025 #if they all come out at min length 10cm
tdg.generateValues(spkr,3,4,3,minLen,maxLen,3)


#[audio, numsamples, tubesAreas,articulators] = vtl.synthSpeech(VTP,glottisParams,tubeSectionCount,numFrames,frameRate,audioSampleRate)
#Audio  = vtl.addToSynthesis(tubelengths,tubeAreas,artics,incdist,velum,aspStrength,glottisParams,synthSpeechRet[0])


#lets see if we can get it to match a single sound.
#the outputs from the learner are:

#   Values for each vocalTractParam
#   Values for each starting state GlottisParam
#   Number of Frames for the sound
#   How fast the Frames play
#   Lengths for each tube
#   Distance from the glottis to the incisors (front teeth)
#   Then area in cm2 of the velum
#   The End state Glottis paramns

#The input to the learner would be the desired sound

#The feedback/error is what is generated by the VTL model from the networks given parameters.








        

